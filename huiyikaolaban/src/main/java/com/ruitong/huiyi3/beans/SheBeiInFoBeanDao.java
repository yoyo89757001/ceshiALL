package com.ruitong.huiyi3.beans;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SHE_BEI_IN_FO_BEAN".
*/
public class SheBeiInFoBeanDao extends AbstractDao<SheBeiInFoBean, Long> {

    public static final String TABLENAME = "SHE_BEI_IN_FO_BEAN";

    /**
     * Properties of entity SheBeiInFoBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property BoxIp = new Property(1, String.class, "boxIp", false, "BOX_IP");
        public final static Property Box_id = new Property(2, int.class, "box_id", false, "BOX_ID");
        public final static Property Camera_address = new Property(3, String.class, "camera_address", false, "CAMERA_ADDRESS");
        public final static Property Camera_position = new Property(4, String.class, "camera_position", false, "CAMERA_POSITION");
        public final static Property CreateTime = new Property(5, long.class, "createTime", false, "CREATE_TIME");
        public final static Property DtoResult = new Property(6, int.class, "dtoResult", false, "DTO_RESULT");
        public final static Property HostId = new Property(7, int.class, "hostId", false, "HOST_ID");
        public final static Property ModifyTime = new Property(8, long.class, "modifyTime", false, "MODIFY_TIME");
        public final static Property PageNum = new Property(9, int.class, "pageNum", false, "PAGE_NUM");
        public final static Property PageSize = new Property(10, int.class, "pageSize", false, "PAGE_SIZE");
        public final static Property Sid = new Property(11, int.class, "sid", false, "SID");
        public final static Property Status = new Property(12, int.class, "status", false, "STATUS");
        public final static Property WeekDate = new Property(13, String.class, "weekDate", false, "WEEK_DATE");
        public final static Property WeekDay = new Property(14, String.class, "weekDay", false, "WEEK_DAY");
        public final static Property Bid = new Property(15, int.class, "bid", false, "BID");
    }


    public SheBeiInFoBeanDao(DaoConfig config) {
        super(config);
    }
    
    public SheBeiInFoBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SHE_BEI_IN_FO_BEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY NOT NULL ," + // 0: id
                "\"BOX_IP\" TEXT," + // 1: boxIp
                "\"BOX_ID\" INTEGER NOT NULL ," + // 2: box_id
                "\"CAMERA_ADDRESS\" TEXT," + // 3: camera_address
                "\"CAMERA_POSITION\" TEXT," + // 4: camera_position
                "\"CREATE_TIME\" INTEGER NOT NULL ," + // 5: createTime
                "\"DTO_RESULT\" INTEGER NOT NULL ," + // 6: dtoResult
                "\"HOST_ID\" INTEGER NOT NULL ," + // 7: hostId
                "\"MODIFY_TIME\" INTEGER NOT NULL ," + // 8: modifyTime
                "\"PAGE_NUM\" INTEGER NOT NULL ," + // 9: pageNum
                "\"PAGE_SIZE\" INTEGER NOT NULL ," + // 10: pageSize
                "\"SID\" INTEGER NOT NULL ," + // 11: sid
                "\"STATUS\" INTEGER NOT NULL ," + // 12: status
                "\"WEEK_DATE\" TEXT," + // 13: weekDate
                "\"WEEK_DAY\" TEXT," + // 14: weekDay
                "\"BID\" INTEGER NOT NULL );"); // 15: bid
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SHE_BEI_IN_FO_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, SheBeiInFoBean entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getId());
 
        String boxIp = entity.getBoxIp();
        if (boxIp != null) {
            stmt.bindString(2, boxIp);
        }
        stmt.bindLong(3, entity.getBox_id());
 
        String camera_address = entity.getCamera_address();
        if (camera_address != null) {
            stmt.bindString(4, camera_address);
        }
 
        String camera_position = entity.getCamera_position();
        if (camera_position != null) {
            stmt.bindString(5, camera_position);
        }
        stmt.bindLong(6, entity.getCreateTime());
        stmt.bindLong(7, entity.getDtoResult());
        stmt.bindLong(8, entity.getHostId());
        stmt.bindLong(9, entity.getModifyTime());
        stmt.bindLong(10, entity.getPageNum());
        stmt.bindLong(11, entity.getPageSize());
        stmt.bindLong(12, entity.getSid());
        stmt.bindLong(13, entity.getStatus());
 
        String weekDate = entity.getWeekDate();
        if (weekDate != null) {
            stmt.bindString(14, weekDate);
        }
 
        String weekDay = entity.getWeekDay();
        if (weekDay != null) {
            stmt.bindString(15, weekDay);
        }
        stmt.bindLong(16, entity.getBid());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, SheBeiInFoBean entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getId());
 
        String boxIp = entity.getBoxIp();
        if (boxIp != null) {
            stmt.bindString(2, boxIp);
        }
        stmt.bindLong(3, entity.getBox_id());
 
        String camera_address = entity.getCamera_address();
        if (camera_address != null) {
            stmt.bindString(4, camera_address);
        }
 
        String camera_position = entity.getCamera_position();
        if (camera_position != null) {
            stmt.bindString(5, camera_position);
        }
        stmt.bindLong(6, entity.getCreateTime());
        stmt.bindLong(7, entity.getDtoResult());
        stmt.bindLong(8, entity.getHostId());
        stmt.bindLong(9, entity.getModifyTime());
        stmt.bindLong(10, entity.getPageNum());
        stmt.bindLong(11, entity.getPageSize());
        stmt.bindLong(12, entity.getSid());
        stmt.bindLong(13, entity.getStatus());
 
        String weekDate = entity.getWeekDate();
        if (weekDate != null) {
            stmt.bindString(14, weekDate);
        }
 
        String weekDay = entity.getWeekDay();
        if (weekDay != null) {
            stmt.bindString(15, weekDay);
        }
        stmt.bindLong(16, entity.getBid());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }    

    @Override
    public SheBeiInFoBean readEntity(Cursor cursor, int offset) {
        SheBeiInFoBean entity = new SheBeiInFoBean( //
            cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // boxIp
            cursor.getInt(offset + 2), // box_id
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // camera_address
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // camera_position
            cursor.getLong(offset + 5), // createTime
            cursor.getInt(offset + 6), // dtoResult
            cursor.getInt(offset + 7), // hostId
            cursor.getLong(offset + 8), // modifyTime
            cursor.getInt(offset + 9), // pageNum
            cursor.getInt(offset + 10), // pageSize
            cursor.getInt(offset + 11), // sid
            cursor.getInt(offset + 12), // status
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // weekDate
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // weekDay
            cursor.getInt(offset + 15) // bid
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, SheBeiInFoBean entity, int offset) {
        entity.setId(cursor.getLong(offset + 0));
        entity.setBoxIp(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setBox_id(cursor.getInt(offset + 2));
        entity.setCamera_address(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCamera_position(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setCreateTime(cursor.getLong(offset + 5));
        entity.setDtoResult(cursor.getInt(offset + 6));
        entity.setHostId(cursor.getInt(offset + 7));
        entity.setModifyTime(cursor.getLong(offset + 8));
        entity.setPageNum(cursor.getInt(offset + 9));
        entity.setPageSize(cursor.getInt(offset + 10));
        entity.setSid(cursor.getInt(offset + 11));
        entity.setStatus(cursor.getInt(offset + 12));
        entity.setWeekDate(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setWeekDay(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setBid(cursor.getInt(offset + 15));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(SheBeiInFoBean entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(SheBeiInFoBean entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(SheBeiInFoBean entity) {
        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
